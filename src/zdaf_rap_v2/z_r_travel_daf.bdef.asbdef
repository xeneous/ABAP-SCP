managed;
strict ( 2 );
with draft;

define behavior for Z_R_TRAVEL_DAF alias Travel
implementation in class zbp_r_travel_daf unique
persistent table ztb_travel_daf
draft table ztb_travel_daf_d
lock master
total etag LastChangedAt
authorization master ( instance, global )
etag master LocalLastChangedAt

{
  create ( precheck );
  update;
  delete;
  association _Booking { create ( features : instance ); with draft; }


  field ( numbering : managed, readonly ) TravelUUID;

  field ( readonly ) TravelID,
  OverallStatus,
  TotalPrice,
  LastChangedAt,
  LastChangedBy,
  LocalLastChangedAt
  // LocalLastChangedAtBy
  ;

  field ( mandatory ) CustomerID,
  CurrencyCode,
  AgencyID,
  BeginDate,
  EndDate;

  field ( features : instance ) BookingFee;


  determination setTravelNumber on save { create; }
  determination setStatusToOpen on modify { create; }
  determination calculateTotalPrice on modify { create; field BookingFee, CurrencyCode; }

  action ( features : instance, authorization : update ) acceptTravel result [1] $self;
  action ( features : instance, authorization : update ) rejectTravel result [1] $self;
  action ( features : instance, authorization : update ) deductDiscount parameter Z_ae_discount_DAF result [1] $self;
  internal action reCalcTotalPrice;

  validation validateCustomer on save { create; field CustomerID; }
  validation validateAgency on save { create; field AgencyID; }
  validation validateDates on save { create; field BeginDate, EndDate; }
  validation validateCurrency on save { create; field CurrencyCode; }
  validation validateBookingFee on save { create; field BookingFee; }

  determine action ValidateCustomerID { validation validateCustomer; }
  determine action ValidateAgencyID { validation validateAgency; }
  determine action ValidateRangeDate { validation validateDates; }

  side effects
  {
    field BookingFee affects field TotalPrice;
    determine action ValidateCustomerID executed on field CustomerID affects messages;
    determine action ValidateAgencyID executed on field AgencyID affects messages;
    determine action ValidateRangeDate executed on field BeginDate, field EndDate affects messages;
  }

  // Habilita opcion Activate
  draft action Activate optimized;
  //  Habilita opcion Discard
  draft action Discard;
  //  Habilita opcion Edit
  draft action Edit;
  draft action Resume with additional implementation;


  draft determine action Prepare
  {
    validation validateCustomer;
    validation validateAgency;
    validation validateDates;
  }

  mapping for ztb_travel_daf
    {
      TravelUUID         = travel_uuid;
      TravelID           = travel_id;
      AgencyID           = agency_id;
      CustomerID         = customer_id;
      BeginDate          = begin_date;
      EndDate            = end_date;
      BookingFee         = booking_fee;
      TotalPrice         = total_price;
      CurrencyCode       = currency_code;
      Description        = description;
      OverallStatus      = overall_status;
      CreatedBy          = created_by;
      CreatedAt          = created_at;
      LastChangedBy      = last_changed_by;
      LocalLastChangedAt = local_last_changed_at;
      LastChangedAt      = last_changed_at;
    }

}

define behavior for Z_R_BOOKING_DAF alias Booking
 implementation in class zbp_r_booking_daf unique
persistent table ztb_booking_daf
draft table ztb_booking_dafd
lock dependent by _Travel
authorization dependent by _Travel
etag master LocalLastChangedAt
{
  update;
  delete;
  association _BookingSupplement { create ( authorization : update ); with draft; }
  association _Travel { with draft; }

  field ( numbering : managed, readonly ) BookingUUID;
  field ( readonly ) TravelUUID, BookingID, BookingDate, LocalLastChangedAt;
  field ( mandatory ) CustomerID, AirlineID, ConnectionID, FlightDate, FlightPrice, CurrencyCode;

  //* Si el campo sufre una modificacion se dispara el metodo
  determination setBookingNumber on save { create; }
  determination setBookingDate on modify { create; }
  determination calculateTotalPrice on modify { create; field FlightPrice, CurrencyCode; }

  validation validateCustomer on save { create; field CustomerID; }
  validation validateConnection on save { create; field AirlineID, ConnectionID, FlightDate; }
  validation validateCurrency on save { create; field CurrencyCode; }
  validation validateFlightPrice on save { create; field FlightPrice; }
  validation validateStatus on save { create; field BookingStatus; }

  determine action ValidateFlightCosts { validation validateFlightPrice; }

  side effects
  {
    field FlightPrice affects field _Travel.TotalPrice;
    determine action ValidateFlightCosts executed on field FlightPrice affects messages;
  }

  mapping for ztb_booking_daf
    {
      BookingUUID        = booking_uuid;
      TravelUUID         = parent_uuid;
      BookingID          = booking_id;
      BookingDate        = booking_date;
      CustomerID         = customer_id;
      AirlineID          = carrier_id;
      ConnectionID       = connection_id;
      FlightDate         = flight_date;
      FlightPrice        = flight_price;
      CurrencyCode       = currency_code;
      BookingStatus      = booking_status;
      LastChangedAt      = last_changed_at;
      LocalLastChangedAt = local_last_changed_at;
    }

}

define behavior for Z_R_BOOKSUP_DAF alias BookingSuplement
implementation in class zbp_r_BookingSup_daf unique
persistent table ztb_booksup_daf
draft table ztb_booksup_dafd
lock dependent by _Travel
authorization dependent by _Travel
etag master LocalLastChangedAt
{
  update;
  delete;

  association _Travel { with draft; }
  association _Booking  { with draft; }

  field ( numbering : managed, readonly ) BooksupplUUID ;
  field ( readonly ) TravelUUID, BookingUUID, BookingSupplementID, LocalLastChangedAt ;
  field (mandatory) SupplementID, Price, CurrencyCode ;

  determination SetBookSupplNumber on modify { create; }
  determination calculateTotalPrice on modify { create; field Price, CurrencyCode; }

  validation validateSupplement on save { create; field SupplementID; }
  validation validateCurrency on save { create; field CurrencyCode; }
  validation validatePrice on save { create; field Price; }

  determine action ValidateSupplementPrice { validation validatePrice; }

  side effects
  {
    field Price affects field _Travel.TotalPrice;
    determine action ValidateSupplementPrice executed on field Price affects messages;
  }

  mapping for ztb_booksup_daf
    {
        BooksupplUUID              = booksuppl_uuid          ;
        TravelUUID                 = travel_uuid             ;
        BookingUUID                = booking_uuid            ;
        BookingSupplementID        = booking_supplement_id   ;
        SupplementID               = supplement_id           ;
        Price                      = price                   ;
        CurrencyCode               = currency_code           ;
        LastChangedAt              = last_changed_at         ;
        LocalLastChangedAt         = local_last_changed_at   ;
    }

}